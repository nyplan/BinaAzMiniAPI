// <auto-generated />
using BinaAzAPI.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BinaAzAPI.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20230407132811_dataSeedCityDistrictTownship")]
    partial class dataSeedCityDistrictTownship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BinaAzAPI.Entities.Ad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("AdNumber")
                        .HasColumnType("integer");

                    b.Property<int>("AdOwnerId")
                        .HasColumnType("integer");

                    b.Property<string>("AdditionalInformation")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int>("ApartmentTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("Area")
                        .HasColumnType("integer");

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<int>("DistrictId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfFloors")
                        .HasColumnType("integer");

                    b.Property<int>("Phone")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("PricePerDayMonthId")
                        .HasColumnType("integer");

                    b.Property<string>("RelevantPerson")
                        .HasColumnType("text");

                    b.Property<int>("RepairId")
                        .HasColumnType("integer");

                    b.Property<int>("RoomsId")
                        .HasColumnType("integer");

                    b.Property<int>("TownshipId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ActionTypeId");

                    b.HasIndex("AdOwnerId");

                    b.HasIndex("ApartmentTypeId");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("PricePerDayMonthId");

                    b.HasIndex("RepairId");

                    b.HasIndex("RoomsId");

                    b.HasIndex("TownshipId");

                    b.ToTable("Ads");
                });

            modelBuilder.Entity("BinaAzAPI.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Baku"
                        });
                });

            modelBuilder.Entity("BinaAzAPI.Entities.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Nerimanov"
                        });
                });

            modelBuilder.Entity("BinaAzAPI.Entities.EnumKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EnumKeys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Key = "apartmentType"
                        },
                        new
                        {
                            Id = 2,
                            Key = "actionType"
                        },
                        new
                        {
                            Id = 3,
                            Key = "rooms"
                        },
                        new
                        {
                            Id = 4,
                            Key = "pricePerDayMonth"
                        },
                        new
                        {
                            Id = 5,
                            Key = "repair"
                        },
                        new
                        {
                            Id = 6,
                            Key = "adOwner"
                        });
                });

            modelBuilder.Entity("BinaAzAPI.Entities.EnumValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("KeyId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("KeyId");

                    b.ToTable("EnumValues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KeyId = 1,
                            Value = "New Building"
                        },
                        new
                        {
                            Id = 2,
                            KeyId = 1,
                            Value = "Old Building"
                        },
                        new
                        {
                            Id = 3,
                            KeyId = 2,
                            Value = "I Sell"
                        },
                        new
                        {
                            Id = 4,
                            KeyId = 2,
                            Value = "I Rent"
                        },
                        new
                        {
                            Id = 5,
                            KeyId = 3,
                            Value = "1 room"
                        },
                        new
                        {
                            Id = 6,
                            KeyId = 3,
                            Value = "2 rooms"
                        },
                        new
                        {
                            Id = 7,
                            KeyId = 3,
                            Value = "3 rooms"
                        },
                        new
                        {
                            Id = 8,
                            KeyId = 3,
                            Value = "4 rooms"
                        },
                        new
                        {
                            Id = 9,
                            KeyId = 3,
                            Value = "5 rooms"
                        },
                        new
                        {
                            Id = 10,
                            KeyId = 3,
                            Value = "6 rooms"
                        },
                        new
                        {
                            Id = 11,
                            KeyId = 4,
                            Value = "Per Day"
                        },
                        new
                        {
                            Id = 12,
                            KeyId = 4,
                            Value = "Per Month"
                        },
                        new
                        {
                            Id = 13,
                            KeyId = 5,
                            Value = "Repaired"
                        },
                        new
                        {
                            Id = 14,
                            KeyId = 5,
                            Value = "Unrepaired"
                        },
                        new
                        {
                            Id = 15,
                            KeyId = 6,
                            Value = "I am the Owner"
                        },
                        new
                        {
                            Id = 16,
                            KeyId = 6,
                            Value = "I am an Agent"
                        });
                });

            modelBuilder.Entity("BinaAzAPI.Entities.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdId")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AdId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("BinaAzAPI.Entities.Township", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DistrictId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Townships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DistrictId = 1,
                            Name = "Boyukshor"
                        });
                });

            modelBuilder.Entity("BinaAzAPI.Entities.Ad", b =>
                {
                    b.HasOne("BinaAzAPI.Entities.EnumValue", "ActionType")
                        .WithMany()
                        .HasForeignKey("ActionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BinaAzAPI.Entities.EnumValue", "AdOwner")
                        .WithMany()
                        .HasForeignKey("AdOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BinaAzAPI.Entities.EnumValue", "ApartmentType")
                        .WithMany()
                        .HasForeignKey("ApartmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BinaAzAPI.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BinaAzAPI.Entities.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BinaAzAPI.Entities.EnumValue", "PricePerDayMonth")
                        .WithMany()
                        .HasForeignKey("PricePerDayMonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BinaAzAPI.Entities.EnumValue", "Repair")
                        .WithMany()
                        .HasForeignKey("RepairId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BinaAzAPI.Entities.EnumValue", "Rooms")
                        .WithMany()
                        .HasForeignKey("RoomsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BinaAzAPI.Entities.Township", "Township")
                        .WithMany()
                        .HasForeignKey("TownshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionType");

                    b.Navigation("AdOwner");

                    b.Navigation("ApartmentType");

                    b.Navigation("City");

                    b.Navigation("District");

                    b.Navigation("PricePerDayMonth");

                    b.Navigation("Repair");

                    b.Navigation("Rooms");

                    b.Navigation("Township");
                });

            modelBuilder.Entity("BinaAzAPI.Entities.District", b =>
                {
                    b.HasOne("BinaAzAPI.Entities.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("BinaAzAPI.Entities.EnumValue", b =>
                {
                    b.HasOne("BinaAzAPI.Entities.EnumKey", "Key")
                        .WithMany()
                        .HasForeignKey("KeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Key");
                });

            modelBuilder.Entity("BinaAzAPI.Entities.Picture", b =>
                {
                    b.HasOne("BinaAzAPI.Entities.Ad", "Ad")
                        .WithMany("Pictures")
                        .HasForeignKey("AdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ad");
                });

            modelBuilder.Entity("BinaAzAPI.Entities.Township", b =>
                {
                    b.HasOne("BinaAzAPI.Entities.District", "District")
                        .WithMany("Townships")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("BinaAzAPI.Entities.Ad", b =>
                {
                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("BinaAzAPI.Entities.City", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("BinaAzAPI.Entities.District", b =>
                {
                    b.Navigation("Townships");
                });
#pragma warning restore 612, 618
        }
    }
}
